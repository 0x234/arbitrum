/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { ArbMulticall2, ArbMulticall2Interface } from '../ArbMulticall2'

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'aggregate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        internalType: 'bytes[]',
        name: 'returnData',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'blockAndAggregate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'bool',
            name: 'success',
            type: 'bool',
          },
          {
            internalType: 'bytes',
            name: 'returnData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Result[]',
        name: 'returnData',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
    ],
    name: 'getBlockHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getBlockNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockCoinbase',
    outputs: [
      {
        internalType: 'address',
        name: 'coinbase',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockDifficulty',
    outputs: [
      {
        internalType: 'uint256',
        name: 'difficulty',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'gaslimit',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'getEthBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getL1BlockNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: 'l1BlockNumber',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLastBlockHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'requireSuccess',
        type: 'bool',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'tryAggregate',
    outputs: [
      {
        components: [
          {
            internalType: 'bool',
            name: 'success',
            type: 'bool',
          },
          {
            internalType: 'bytes',
            name: 'returnData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Result[]',
        name: 'returnData',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bool',
        name: 'requireSuccess',
        type: 'bool',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'tryBlockAndAggregate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
      {
        components: [
          {
            internalType: 'bool',
            name: 'success',
            type: 'bool',
          },
          {
            internalType: 'bytes',
            name: 'returnData',
            type: 'bytes',
          },
        ],
        internalType: 'struct ArbMulticall2.Result[]',
        name: 'returnData',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50610b9d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c806372425d9d1161007c57806372425d9d1461014857806386d516e814610150578063a8b0574e14610158578063b9b3efe91461016d578063bce38bd714610175578063c3077fa914610195578063ee82ac5e146101a8576100bf565b80630f28c97d146100c4578063252dba42146100e257806327e86d6e14610103578063399542e91461010b57806342cbb15c1461012d5780634d2301cc14610135575b600080fd5b6100cc6101bb565b6040516100d99190610a01565b60405180910390f35b6100f56100f0366004610868565b6101bf565b6040516100d9929190610a80565b6100cc610371565b61011e6101193660046108a3565b6103ee565b6040516100d993929190610ae8565b6100cc6104ef565b6100cc610143366004610846565b610568565b6100cc610575565b6100cc610579565b61016061057d565b6040516100d991906109da565b6100cc610581565b6101886101833660046108a3565b610585565b6040516100d991906109ee565b61011e6101a3366004610868565b6106db565b6100cc6101b63660046108f5565b6106f8565b4290565b6000606060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101fd57600080fd5b505afa158015610211573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610235919061090d565b9150825167ffffffffffffffff8111801561024f57600080fd5b5060405190808252806020026020018201604052801561028357816020015b606081526020019060019003908161026e5790505b50905060005b835181101561036b57600060608583815181106102a257fe5b6020026020010151600001516001600160a01b03168684815181106102c357fe5b6020026020010151602001516040516102dc91906109be565b6000604051808303816000865af19150503d8060008114610319576040519150601f19603f3d011682016040523d82523d6000602084013e61031e565b606091505b5091509150816103495760405162461bcd60e51b815260040161034090610a4b565b60405180910390fd5b8084848151811061035657fe5b60209081029190910101525050600101610289565b50915091565b6000600160646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103af57600080fd5b505afa1580156103c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e7919061090d565b0340905090565b600080606060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561042d57600080fd5b505afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610465919061090d565b925060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104a157600080fd5b505afa1580156104b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d9919061090d565b4091506104e68585610585565b90509250925092565b600060646001600160a01b031663a3b1b31d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561052b57600080fd5b505afa15801561053f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610563919061090d565b905090565b6001600160a01b03163190565b4490565b4590565b4190565b4390565b6060815167ffffffffffffffff8111801561059f57600080fd5b506040519080825280602002602001820160405280156105d957816020015b6105c66106fc565b8152602001906001900390816105be5790505b50905060005b82518110156106d457600060608483815181106105f857fe5b6020026020010151600001516001600160a01b031685848151811061061957fe5b60200260200101516020015160405161063291906109be565b6000604051808303816000865af19150503d806000811461066f576040519150601f19603f3d011682016040523d82523d6000602084013e610674565b606091505b5091509150851561069c578161069c5760405162461bcd60e51b815260040161034090610a0a565b60405180604001604052808315158152602001828152508484815181106106bf57fe5b602090810291909101015250506001016105df565b5092915050565b60008060606106eb6001856103ee565b9196909550909350915050565b4090565b60408051808201909152600081526060602082015290565b80356001600160a01b038116811461072b57600080fd5b92915050565b6000601f8381840112610742578182fd5b823567ffffffffffffffff80821115610759578384fd5b60206107688182850201610b10565b838152945080850186820160005b8581101561083957813589016040601f198181848f0301121561079857600080fd5b6107a182610b10565b6107ad8e898601610714565b815282840135898111156107c057600080fd5b8085018f603f8201126107d257600080fd5b8981013595508a8611156107e557600080fd5b6107f48a858f89011601610b10565b91508582528f8587830101111561080a57600080fd5b858582018b84013750600094810189019490945280880193909352505083529183019190830190600101610776565b5050505050505092915050565b600060208284031215610857578081fd5b6108618383610714565b9392505050565b600060208284031215610879578081fd5b813567ffffffffffffffff81111561088f578182fd5b61089b84828501610731565b949350505050565b600080604083850312156108b5578081fd5b823580151581146108c4578182fd5b9150602083013567ffffffffffffffff8111156108df578182fd5b6108eb85828601610731565b9150509250929050565b600060208284031215610906578081fd5b5035919050565b60006020828403121561091e578081fd5b5051919050565b60008282518085526020808601955080818302840101818601855b8481101561098557601f198684030189528151604081511515855285820151818787015261097082870182610992565b9b87019b955050509184019150600101610940565b5090979650505050505050565b600081518084526109aa816020860160208601610b37565b601f01601f19169290920160200192915050565b600082516109d0818460208701610b37565b9190910192915050565b6001600160a01b0391909116815260200190565b6000602082526108616020830184610925565b90815260200190565b60208082526021908201527f4d756c746963616c6c32206167677265676174653a2063616c6c206661696c656040820152601960fa1b606082015260800190565b6020808252818101527f4d756c746963616c6c206167677265676174653a2063616c6c206661696c6564604082015260600190565b600060408201848352602060408185015281855180845260608601915060608382028701019350828701855b82811015610ada57605f19888703018452610ac8868351610992565b95509284019290840190600101610aac565b509398975050505050505050565b600084825283602083015260606040830152610b076060830184610925565b95945050505050565b60405181810167ffffffffffffffff81118282101715610b2f57600080fd5b604052919050565b60005b83811015610b52578181015183820152602001610b3a565b83811115610b61576000848401525b5050505056fea2646970667358221220864d26f40d614c249e45e350f26dc6633f1e33dd1e15616866ad18f866c21efb64736f6c634300060b0033'

export class ArbMulticall2__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArbMulticall2> {
    return super.deploy(overrides || {}) as Promise<ArbMulticall2>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): ArbMulticall2 {
    return super.attach(address) as ArbMulticall2
  }
  connect(signer: Signer): ArbMulticall2__factory {
    return super.connect(signer) as ArbMulticall2__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ArbMulticall2Interface {
    return new utils.Interface(_abi) as ArbMulticall2Interface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbMulticall2 {
    return new Contract(address, _abi, signerOrProvider) as ArbMulticall2
  }
}
